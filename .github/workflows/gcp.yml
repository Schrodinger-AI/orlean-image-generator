name: Publish Docker Image to GCP

on:
  push:
    branches: ['develop']

env:
  PROJECT_ID: ${{ vars.PROJECT_ID }}
  PROJECT_NUMBER: ${{ vars.PROJECT_NUMBER }}
  REPOSITORY: orlean-image-generator
  REPOSITORY_REGION: us-central1

jobs:
  build-dotnet:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        servicename: [SiloHost, WebApiClient]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0'
      - run: dotnet publish ${{ matrix.servicename }}/${{ matrix.servicename }}.csproj
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.servicename }}
          path: ${{ matrix.servicename }}/bin/Release/net8.0/publish
      
  build-and-push-image:
    needs: build-dotnet
    runs-on: ubuntu-latest
    environment: development
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        servicename: [SiloHost, WebApiClient]
    outputs:
      image: ${{ steps.tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.servicename }}
          path: ${{ matrix.servicename }}/bin/Release/net8.0/publish
      #
      # Authenticate to Google Cloud using workload identity federation
      #
      - id: 'auth'
        name: 'Obtain access token by using workload identity federation'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: projects/${{ env.PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github-actions/providers/github-actions-oidc
          service_account: github-actions-workflow@${{ env.PROJECT_ID }}.iam.gserviceaccount.com

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          version: '>= 363.0.0'

      - name: 'Docker auth'
        run: |-
          gcloud auth configure-docker ${{ env.REPOSITORY_REGION }}-docker.pkg.dev

      #
      # Build the Docker image and push it to Artifact Registry
      #
      - name: Create image tag
        run: echo "IMAGE_TAG=${{ env.REPOSITORY_REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ matrix.servicename }}:$GITHUB_SHA" >> $GITHUB_ENV

      - name: Build Docker image
        run: docker build --tag "${{ env.IMAGE_TAG }}" ${{ matrix.servicename@L }}

      - name: Publish Docker image to Google Artifact Registry
        run: docker push "${{ env.IMAGE_TAG }}"