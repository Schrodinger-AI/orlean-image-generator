name: Create and publish a Docker image

on:
  workflow_dispatch:
    branches: ["develop", "ci/*"]

env:
  PROJECT_ID: {{ env.PROJECT_ID }}
  PROJECT_NUMBER: {{ env.PROJECT_NUMBER }}
  REPOSITORY: orlean-image-generator
  REPOSITORY_REGION: us-central1
  DEPLOY_OWNER: Schrodinger-AI
  DEPLOY_REPO: orlean-image-generator-deployment

jobs:
  build-dotnet:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0'
      - run: dotnet publish -c Release
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: SiloHost
          path: SiloHost/bin/Release/net8.0/publish
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: WebApiClient
          path: WebApiClient/bin/Release/net8.0/publish
      
  build-and-push-image:
    needs: build-dotnet
    runs-on: ubuntu-latest
    strategy:
      matrix:
        servicename: [SiloHost, WebApiClient]
    outputs:
      image: ${{ steps.tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.servicename }}
          path: ${{ matrix.servicename }}/bin/Release/net8.0/publish
      #
      # Authenticate to Google Cloud using workload identity federation
      #
      - id: 'auth'
        name: 'Obtain access token by using workload identity federation'
        uses: 'google-github-actions/auth@v0'
        with:
          create_credentials_file: true
          token_format: access_token
          workload_identity_provider: projects/${{ env.PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github-actions/providers/github-actions-oidc
          service_account: github-actions-workflow@${{ env.PROJECT_ID }}.iam.gserviceaccount.com

      - name: Connect to Artifact Registry
        run: |-
          echo ${{ steps.auth.outputs.access_token }} | docker login -u oauth2accesstoken --password-stdin https://${{ env.REPOSITORY_REGION }}-docker.pkg.dev

      #
      # Build the Docker image and push it to Artifact Registry
      #
      - name: Create image tag
        run: echo "IMAGE_TAG=${{ env.REPOSITORY_REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:$GITHUB_SHA" >> $GITHUB_ENV

      - name: Build Docker image
        run: docker build --tag "${{ env.IMAGE_TAG }}" {{ matrix.servicename }}

      - name: Publish Docker image to Google Artifact Registry
        run: docker push "${{ env.IMAGE_TAG }}"

      - id: tag
        run: echo "tag=${{ env.IMAGE_TAG }}" >> "$GITHUB_OUTPUT"

  build-and-push-image:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    jobs:
      - env:
          OUTPUT: ${{needs.build-and-push-image.outputs}}
        run: echo "$OUTPUT"
      # - name: Trigger Workflow in Another Repository
      #   run: |
      #     # Set the required variables
      #     event_type="trigger-workflow"
  
      #     curl -L \
      #       -X POST \
      #       -H "Accept: application/vnd.github+json" \
      #       -H "Authorization: Bearer ${{ secrets.PAT }}" \
      #       -H "X-GitHub-Api-Version: 2022-11-28" \
      #       https://api.github.com/repos/${{ env.DEPLOY_OWNER }}/${{ env.DEPLOY_REPO }}/dispatches \
      #       -d "{\"event_type\": \"$event_type\", \"client_payload\": {\"service\": \"$service\", \"version\": \"$version\", \"unit\": false, \"integration\": true}}"